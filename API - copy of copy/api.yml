openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API about people that play Warframe"
  version: "1.0.0"

servers:
  - url: "/api"

paths:
  /people:
    get:
      operationId: "people.read_all"
      tags:
        - "People"
      summary: "Read the list of people"
      responses:
        "200":
          description: "Successfully read people list"

    post:
      operationId: "people.create"
      tags:
        - People
      summary: "Create a person"
      requestBody:
          description: "Person to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "person"
                $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: "Successfully created person"

  /people/{name}:
    get:
      operationId: "people.read_one"
      tags:
        - People
      summary: "Read one person"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully read person"

    put:
      tags:
        - People
      operationId: "people.update"
      summary: "Update a person"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "200":
          description: "Successfully updated person"
      requestBody:
        required: True
        content:
          application/json:
            schema:
              x-body-name: "person"
              type: object
              properties:
                name:
                  type: string
                  description: "Updated name"
                email:
                  type: string
                  description: "Updated email"
                fav_frame:
                  type: string
                  description: "Updated favourite warframe"


    delete:
      tags:
        - People
      operationId: "people.delete"
      summary: "Delete a person"
      parameters:
        - $ref: "#/components/parameters/name"
      responses:
        "204":
          description: "Successfully deleted person"

components:
  schemas:
    Person:
      type: "object"
      required:
        - name
      properties:
        name:
          type: "string"
  parameters:
    name:
      name: "name"
      description: "The name of the person to get"
      in: path
      required: True
      schema:
        type: "string"